{"ast":null,"code":"import _taggedTemplateLiteral from\"/Users/projects/Documents/GitHub/real-time-chat-front-end/public/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\";import _asyncToGenerator from\"/Users/projects/Documents/GitHub/real-time-chat-front-end/public/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/Users/projects/Documents/GitHub/real-time-chat-front-end/public/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";var _templateObject;import _regeneratorRuntime from\"/Users/projects/Documents/GitHub/real-time-chat-front-end/public/node_modules/@babel/runtime/regenerator/index.js\";import React,{useState,useEffect}from\"react\";import styled from\"styled-components\";import Logo from\"../assets/logo.svg\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";export default function Contacts(_ref){var contacts=_ref.contacts,changeChat=_ref.changeChat;var _useState=useState(undefined),_useState2=_slicedToArray(_useState,2),currentUserName=_useState2[0],setCurrentUserName=_useState2[1];var _useState3=useState(undefined),_useState4=_slicedToArray(_useState3,2),currentUserImage=_useState4[0],setCurrentUserImage=_useState4[1];var _useState5=useState(undefined),_useState6=_slicedToArray(_useState5,2),currentSelected=_useState6[0],setCurrentSelected=_useState6[1];useEffect(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var data;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return JSON.parse(localStorage.getItem(process.env.REACT_APP_LOCALHOST_KEY));case 2:data=_context.sent;setCurrentUserName(data.username);setCurrentUserImage(data.avatarImage);case 5:case\"end\":return _context.stop();}}},_callee);})),[]);var changeCurrentChat=function changeCurrentChat(index,contact){setCurrentSelected(index);changeChat(contact);};return/*#__PURE__*/_jsx(_Fragment,{children:currentUserImage&&currentUserImage&&/*#__PURE__*/_jsxs(Container,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"brand\",children:[/*#__PURE__*/_jsx(\"img\",{src:Logo,alt:\"logo\"}),/*#__PURE__*/_jsx(\"h3\",{children:\"snappy\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"contacts\",children:contacts.map(function(contact,index){return/*#__PURE__*/_jsxs(\"div\",{className:\"contact \".concat(index===currentSelected?\"selected\":\"\"),onClick:function onClick(){return changeCurrentChat(index,contact);},children:[/*#__PURE__*/_jsx(\"div\",{className:\"avatar\",children:/*#__PURE__*/_jsx(\"img\",{src:\"data:image/svg+xml;base64,\".concat(contact.avatarImage),alt:\"\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"username\",children:/*#__PURE__*/_jsx(\"h3\",{children:contact.username})})]},contact._id);})}),/*#__PURE__*/_jsxs(\"div\",{className:\"current-user\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"avatar\",children:/*#__PURE__*/_jsx(\"img\",{src:\"data:image/svg+xml;base64,\".concat(currentUserImage),alt:\"avatar\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"username\",children:/*#__PURE__*/_jsx(\"h2\",{children:currentUserName})})]})]})});}var Container=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  display: grid;\\n  grid-template-rows: 10% 75% 15%;\\n  overflow: hidden;\\n  background-color: #080420;\\n  .brand {\\n    display: flex;\\n    align-items: center;\\n    gap: 1rem;\\n    justify-content: center;\\n    img {\\n      height: 2rem;\\n    }\\n    h3 {\\n      color: white;\\n      text-transform: uppercase;\\n    }\\n  }\\n  .contacts {\\n    display: flex;\\n    flex-direction: column;\\n    align-items: center;\\n    overflow: auto;\\n    gap: 0.8rem;\\n    &::-webkit-scrollbar {\\n      width: 0.2rem;\\n      &-thumb {\\n        background-color: #ffffff39;\\n        width: 0.1rem;\\n        border-radius: 1rem;\\n      }\\n    }\\n    .contact {\\n      background-color: #ffffff34;\\n      min-height: 5rem;\\n      cursor: pointer;\\n      width: 90%;\\n      border-radius: 0.2rem;\\n      padding: 0.4rem;\\n      display: flex;\\n      gap: 1rem;\\n      align-items: center;\\n      transition: 0.5s ease-in-out;\\n      .avatar {\\n        img {\\n          height: 3rem;\\n        }\\n      }\\n      .username {\\n        h3 {\\n          color: white;\\n        }\\n      }\\n    }\\n    .selected {\\n      background-color: #9a86f3;\\n    }\\n  }\\n\\n  .current-user {\\n    background-color: #0d0d30;\\n    display: flex;\\n    justify-content: center;\\n    align-items: center;\\n    gap: 2rem;\\n    .avatar {\\n      img {\\n        height: 4rem;\\n        max-inline-size: 100%;\\n      }\\n    }\\n    .username {\\n      h2 {\\n        color: white;\\n      }\\n    }\\n    @media screen and (min-width: 720px) and (max-width: 1080px) {\\n      gap: 0.5rem;\\n      .username {\\n        h2 {\\n          font-size: 1rem;\\n        }\\n      }\\n    }\\n  }\\n\"])));","map":{"version":3,"sources":["/Users/projects/Documents/GitHub/real-time-chat-front-end/public/src/components/Contacts.jsx"],"names":["React","useState","useEffect","styled","Logo","Contacts","contacts","changeChat","undefined","currentUserName","setCurrentUserName","currentUserImage","setCurrentUserImage","currentSelected","setCurrentSelected","JSON","parse","localStorage","getItem","process","env","REACT_APP_LOCALHOST_KEY","data","username","avatarImage","changeCurrentChat","index","contact","map","_id","Container","div"],"mappings":"+nBAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,MAAOC,CAAAA,MAAP,KAAmB,mBAAnB,CACA,MAAOC,CAAAA,IAAP,KAAiB,oBAAjB,C,6IAEA,cAAe,SAASC,CAAAA,QAAT,MAA4C,IAAxBC,CAAAA,QAAwB,MAAxBA,QAAwB,CAAdC,UAAc,MAAdA,UAAc,CACzD,cAA8CN,QAAQ,CAACO,SAAD,CAAtD,wCAAOC,eAAP,eAAwBC,kBAAxB,eACA,eAAgDT,QAAQ,CAACO,SAAD,CAAxD,yCAAOG,gBAAP,eAAyBC,mBAAzB,eACA,eAA8CX,QAAQ,CAACO,SAAD,CAAtD,yCAAOK,eAAP,eAAwBC,kBAAxB,eACAZ,SAAS,sEAAC,kKACWa,CAAAA,IAAI,CAACC,KAAL,CACjBC,YAAY,CAACC,OAAb,CAAqBC,OAAO,CAACC,GAAR,CAAYC,uBAAjC,CADiB,CADX,QACFC,IADE,eAIRZ,kBAAkB,CAACY,IAAI,CAACC,QAAN,CAAlB,CACAX,mBAAmB,CAACU,IAAI,CAACE,WAAN,CAAnB,CALQ,sDAAD,GAMN,EANM,CAAT,CAOA,GAAMC,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,CAACC,KAAD,CAAQC,OAAR,CAAoB,CAC5Cb,kBAAkB,CAACY,KAAD,CAAlB,CACAnB,UAAU,CAACoB,OAAD,CAAV,CACD,CAHD,CAIA,mBACE,yBACGhB,gBAAgB,EAAIA,gBAApB,eACC,MAAC,SAAD,yBACE,aAAK,SAAS,CAAC,OAAf,wBACE,YAAK,GAAG,CAAEP,IAAV,CAAgB,GAAG,CAAC,MAApB,EADF,cAEE,8BAFF,GADF,cAKE,YAAK,SAAS,CAAC,UAAf,UACGE,QAAQ,CAACsB,GAAT,CAAa,SAACD,OAAD,CAAUD,KAAV,CAAoB,CAChC,mBACE,aAEE,SAAS,mBACPA,KAAK,GAAKb,eAAV,CAA4B,UAA5B,CAAyC,EADlC,CAFX,CAKE,OAAO,CAAE,yBAAMY,CAAAA,iBAAiB,CAACC,KAAD,CAAQC,OAAR,CAAvB,EALX,wBAOE,YAAK,SAAS,CAAC,QAAf,uBACE,YACE,GAAG,qCAA+BA,OAAO,CAACH,WAAvC,CADL,CAEE,GAAG,CAAC,EAFN,EADF,EAPF,cAaE,YAAK,SAAS,CAAC,UAAf,uBACE,oBAAKG,OAAO,CAACJ,QAAb,EADF,EAbF,GACOI,OAAO,CAACE,GADf,CADF,CAmBD,CApBA,CADH,EALF,cA4BE,aAAK,SAAS,CAAC,cAAf,wBACE,YAAK,SAAS,CAAC,QAAf,uBACE,YACE,GAAG,qCAA+BlB,gBAA/B,CADL,CAEE,GAAG,CAAC,QAFN,EADF,EADF,cAOE,YAAK,SAAS,CAAC,UAAf,uBACE,oBAAKF,eAAL,EADF,EAPF,GA5BF,GAFJ,EADF,CA8CD,CACD,GAAMqB,CAAAA,SAAS,CAAG3B,MAAM,CAAC4B,GAAV,6pDAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport Logo from \"../assets/logo.svg\";\n\nexport default function Contacts({ contacts, changeChat }) {\n  const [currentUserName, setCurrentUserName] = useState(undefined);\n  const [currentUserImage, setCurrentUserImage] = useState(undefined);\n  const [currentSelected, setCurrentSelected] = useState(undefined);\n  useEffect(async () => {\n    const data = await JSON.parse(\n      localStorage.getItem(process.env.REACT_APP_LOCALHOST_KEY)\n    );\n    setCurrentUserName(data.username);\n    setCurrentUserImage(data.avatarImage);\n  }, []);\n  const changeCurrentChat = (index, contact) => {\n    setCurrentSelected(index);\n    changeChat(contact);\n  };\n  return (\n    <>\n      {currentUserImage && currentUserImage && (\n        <Container>\n          <div className=\"brand\">\n            <img src={Logo} alt=\"logo\" />\n            <h3>snappy</h3>\n          </div>\n          <div className=\"contacts\">\n            {contacts.map((contact, index) => {\n              return (\n                <div\n                  key={contact._id}\n                  className={`contact ${\n                    index === currentSelected ? \"selected\" : \"\"\n                  }`}\n                  onClick={() => changeCurrentChat(index, contact)}\n                >\n                  <div className=\"avatar\">\n                    <img\n                      src={`data:image/svg+xml;base64,${contact.avatarImage}`}\n                      alt=\"\"\n                    />\n                  </div>\n                  <div className=\"username\">\n                    <h3>{contact.username}</h3>\n                  </div>\n                </div>\n              );\n            })}\n          </div>\n          <div className=\"current-user\">\n            <div className=\"avatar\">\n              <img\n                src={`data:image/svg+xml;base64,${currentUserImage}`}\n                alt=\"avatar\"\n              />\n            </div>\n            <div className=\"username\">\n              <h2>{currentUserName}</h2>\n            </div>\n          </div>\n        </Container>\n      )}\n    </>\n  );\n}\nconst Container = styled.div`\n  display: grid;\n  grid-template-rows: 10% 75% 15%;\n  overflow: hidden;\n  background-color: #080420;\n  .brand {\n    display: flex;\n    align-items: center;\n    gap: 1rem;\n    justify-content: center;\n    img {\n      height: 2rem;\n    }\n    h3 {\n      color: white;\n      text-transform: uppercase;\n    }\n  }\n  .contacts {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    overflow: auto;\n    gap: 0.8rem;\n    &::-webkit-scrollbar {\n      width: 0.2rem;\n      &-thumb {\n        background-color: #ffffff39;\n        width: 0.1rem;\n        border-radius: 1rem;\n      }\n    }\n    .contact {\n      background-color: #ffffff34;\n      min-height: 5rem;\n      cursor: pointer;\n      width: 90%;\n      border-radius: 0.2rem;\n      padding: 0.4rem;\n      display: flex;\n      gap: 1rem;\n      align-items: center;\n      transition: 0.5s ease-in-out;\n      .avatar {\n        img {\n          height: 3rem;\n        }\n      }\n      .username {\n        h3 {\n          color: white;\n        }\n      }\n    }\n    .selected {\n      background-color: #9a86f3;\n    }\n  }\n\n  .current-user {\n    background-color: #0d0d30;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    gap: 2rem;\n    .avatar {\n      img {\n        height: 4rem;\n        max-inline-size: 100%;\n      }\n    }\n    .username {\n      h2 {\n        color: white;\n      }\n    }\n    @media screen and (min-width: 720px) and (max-width: 1080px) {\n      gap: 0.5rem;\n      .username {\n        h2 {\n          font-size: 1rem;\n        }\n      }\n    }\n  }\n`;\n"]},"metadata":{},"sourceType":"module"}