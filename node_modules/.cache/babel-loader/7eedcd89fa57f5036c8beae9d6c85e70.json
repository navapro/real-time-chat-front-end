{"ast":null,"code":"import _taggedTemplateLiteral from\"/Users/projects/Documents/GitHub/real-time-chat-front-end/public/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\";import _toConsumableArray from\"/Users/projects/Documents/GitHub/real-time-chat-front-end/public/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _asyncToGenerator from\"/Users/projects/Documents/GitHub/real-time-chat-front-end/public/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/Users/projects/Documents/GitHub/real-time-chat-front-end/public/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";var _templateObject;import _regeneratorRuntime from\"/Users/projects/Documents/GitHub/real-time-chat-front-end/public/node_modules/@babel/runtime/regenerator/index.js\";import React,{useState,useEffect,useRef}from\"react\";import styled from\"styled-components\";import ChatInput from\"./ChatInput\";import Logout from\"./Logout\";import{v4 as uuidv4}from\"uuid\";import axios from\"axios\";import{sendMessageRoute,recieveMessageRoute}from\"../utils/APIRoutes\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function ChatContainer(_ref){var currentChat=_ref.currentChat,socket=_ref.socket;var _useState=useState([]),_useState2=_slicedToArray(_useState,2),messages=_useState2[0],setMessages=_useState2[1];var scrollRef=useRef();var _useState3=useState(null),_useState4=_slicedToArray(_useState3,2),arrivalMessage=_useState4[0],setArrivalMessage=_useState4[1];useEffect(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var data,response;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return JSON.parse(localStorage.getItem(process.env.REACT_APP_LOCALHOST_KEY));case 2:data=_context.sent;_context.next=5;return axios.post(recieveMessageRoute,{from:data._id,to:currentChat._id});case 5:response=_context.sent;setMessages(response.data);case 7:case\"end\":return _context.stop();}}},_callee);})),[currentChat]);useEffect(function(){var getCurrentChat=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:if(!currentChat){_context2.next=3;break;}_context2.next=3;return JSON.parse(localStorage.getItem(process.env.REACT_APP_LOCALHOST_KEY))._id;case 3:case\"end\":return _context2.stop();}}},_callee2);}));return function getCurrentChat(){return _ref3.apply(this,arguments);};}();getCurrentChat();},[currentChat]);var handleSendMsg=/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(msg){var data,msgs;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.next=2;return JSON.parse(localStorage.getItem(process.env.REACT_APP_LOCALHOST_KEY));case 2:data=_context3.sent;socket.current.emit(\"send-msg\",{to:currentChat._id,from:data._id,msg:msg});_context3.next=6;return axios.post(sendMessageRoute,{from:data._id,to:currentChat._id,message:msg});case 6:msgs=_toConsumableArray(messages);msgs.push({fromSelf:true,message:msg});setMessages(msgs);case 9:case\"end\":return _context3.stop();}}},_callee3);}));return function handleSendMsg(_x){return _ref4.apply(this,arguments);};}();useEffect(function(){if(socket.current){socket.current.on(\"msg-recieve\",function(msg){setArrivalMessage({fromSelf:false,message:msg});});}},[]);useEffect(function(){arrivalMessage&&setMessages(function(prev){return[].concat(_toConsumableArray(prev),[arrivalMessage]);});},[arrivalMessage]);useEffect(function(){var _scrollRef$current;(_scrollRef$current=scrollRef.current)===null||_scrollRef$current===void 0?void 0:_scrollRef$current.scrollIntoView({behavior:\"smooth\"});},[messages]);return/*#__PURE__*/_jsxs(Container,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"chat-header\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"user-details\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"avatar\",children:/*#__PURE__*/_jsx(\"img\",{src:\"data:image/svg+xml;base64,\".concat(currentChat.avatarImage),alt:\"\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"username\",children:/*#__PURE__*/_jsx(\"h3\",{children:currentChat.username})})]}),/*#__PURE__*/_jsx(Logout,{})]}),/*#__PURE__*/_jsx(\"div\",{className:\"chat-messages\",children:messages.map(function(message){return/*#__PURE__*/_jsx(\"div\",{ref:scrollRef,children:/*#__PURE__*/_jsx(\"div\",{className:\"message \".concat(message.fromSelf?\"sended\":\"recieved\"),children:/*#__PURE__*/_jsx(\"div\",{className:\"content \",children:/*#__PURE__*/_jsx(\"p\",{children:message.message})})})},uuidv4());})}),/*#__PURE__*/_jsx(ChatInput,{handleSendMsg:handleSendMsg})]});}var Container=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  display: grid;\\n  grid-template-rows: 10% 80% 10%;\\n  gap: 0.1rem;\\n  overflow: hidden;\\n  @media screen and (min-width: 720px) and (max-width: 1080px) {\\n    grid-template-rows: 15% 70% 15%;\\n  }\\n  .chat-header {\\n    display: flex;\\n    justify-content: space-between;\\n    align-items: center;\\n    padding: 0 2rem;\\n    .user-details {\\n      display: flex;\\n      align-items: center;\\n      gap: 1rem;\\n      .avatar {\\n        img {\\n          height: 3rem;\\n        }\\n      }\\n      .username {\\n        h3 {\\n          color: white;\\n        }\\n      }\\n    }\\n  }\\n  .chat-messages {\\n    padding: 1rem 2rem;\\n    display: flex;\\n    flex-direction: column;\\n    gap: 1rem;\\n    overflow: auto;\\n    &::-webkit-scrollbar {\\n      width: 0.2rem;\\n      &-thumb {\\n        background-color: #ffffff39;\\n        width: 0.1rem;\\n        border-radius: 1rem;\\n      }\\n    }\\n    .message {\\n      display: flex;\\n      align-items: center;\\n      .content {\\n        max-width: 40%;\\n        overflow-wrap: break-word;\\n        padding: 1rem;\\n        font-size: 1.1rem;\\n        border-radius: 1rem;\\n        color: #d1d1d1;\\n        @media screen and (min-width: 720px) and (max-width: 1080px) {\\n          max-width: 70%;\\n        }\\n      }\\n    }\\n    .sended {\\n      justify-content: flex-end;\\n      .content {\\n        background-color: #4f04ff21;\\n      }\\n    }\\n    .recieved {\\n      justify-content: flex-start;\\n      .content {\\n        background-color: #9900ff20;\\n      }\\n    }\\n  }\\n\"])));","map":{"version":3,"sources":["/Users/projects/Documents/GitHub/real-time-chat-front-end/public/src/components/ChatContainer.jsx"],"names":["React","useState","useEffect","useRef","styled","ChatInput","Logout","v4","uuidv4","axios","sendMessageRoute","recieveMessageRoute","ChatContainer","currentChat","socket","messages","setMessages","scrollRef","arrivalMessage","setArrivalMessage","JSON","parse","localStorage","getItem","process","env","REACT_APP_LOCALHOST_KEY","data","post","from","_id","to","response","getCurrentChat","handleSendMsg","msg","current","emit","message","msgs","push","fromSelf","on","prev","scrollIntoView","behavior","avatarImage","username","map","Container","div"],"mappings":"6xBAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,CAAqCC,MAArC,KAAmD,OAAnD,CACA,MAAOC,CAAAA,MAAP,KAAmB,mBAAnB,CACA,MAAOC,CAAAA,SAAP,KAAsB,aAAtB,CACA,MAAOC,CAAAA,MAAP,KAAmB,UAAnB,CACA,OAASC,EAAE,GAAIC,CAAAA,MAAf,KAA6B,MAA7B,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,gBAAT,CAA2BC,mBAA3B,KAAsD,oBAAtD,C,wFAEA,cAAe,SAASC,CAAAA,aAAT,MAAgD,IAAvBC,CAAAA,WAAuB,MAAvBA,WAAuB,CAAVC,MAAU,MAAVA,MAAU,CAC7D,cAAgCb,QAAQ,CAAC,EAAD,CAAxC,wCAAOc,QAAP,eAAiBC,WAAjB,eACA,GAAMC,CAAAA,SAAS,CAAGd,MAAM,EAAxB,CACA,eAA4CF,QAAQ,CAAC,IAAD,CAApD,yCAAOiB,cAAP,eAAuBC,iBAAvB,eAEAjB,SAAS,sEAAC,2KACWkB,CAAAA,IAAI,CAACC,KAAL,CACjBC,YAAY,CAACC,OAAb,CAAqBC,OAAO,CAACC,GAAR,CAAYC,uBAAjC,CADiB,CADX,QACFC,IADE,qCAIelB,CAAAA,KAAK,CAACmB,IAAN,CAAWjB,mBAAX,CAAgC,CACrDkB,IAAI,CAAEF,IAAI,CAACG,GAD0C,CAErDC,EAAE,CAAElB,WAAW,CAACiB,GAFqC,CAAhC,CAJf,QAIFE,QAJE,eAQRhB,WAAW,CAACgB,QAAQ,CAACL,IAAV,CAAX,CARQ,sDAAD,GASN,CAACd,WAAD,CATM,CAAT,CAWAX,SAAS,CAAC,UAAM,CACd,GAAM+B,CAAAA,cAAc,2FAAG,4IACjBpB,WADiB,iDAEbO,CAAAA,IAAI,CAACC,KAAL,CACJC,YAAY,CAACC,OAAb,CAAqBC,OAAO,CAACC,GAAR,CAAYC,uBAAjC,CADI,EAEJI,GAJiB,yDAAH,kBAAdG,CAAAA,cAAc,2CAApB,CAOAA,cAAc,GACf,CATQ,CASN,CAACpB,WAAD,CATM,CAAT,CAWA,GAAMqB,CAAAA,aAAa,2FAAG,kBAAOC,GAAP,2JACDf,CAAAA,IAAI,CAACC,KAAL,CACjBC,YAAY,CAACC,OAAb,CAAqBC,OAAO,CAACC,GAAR,CAAYC,uBAAjC,CADiB,CADC,QACdC,IADc,gBAIpBb,MAAM,CAACsB,OAAP,CAAeC,IAAf,CAAoB,UAApB,CAAgC,CAC9BN,EAAE,CAAElB,WAAW,CAACiB,GADc,CAE9BD,IAAI,CAAEF,IAAI,CAACG,GAFmB,CAG9BK,GAAG,CAAHA,GAH8B,CAAhC,EAJoB,uBASd1B,CAAAA,KAAK,CAACmB,IAAN,CAAWlB,gBAAX,CAA6B,CACjCmB,IAAI,CAAEF,IAAI,CAACG,GADsB,CAEjCC,EAAE,CAAElB,WAAW,CAACiB,GAFiB,CAGjCQ,OAAO,CAAEH,GAHwB,CAA7B,CATc,QAedI,IAfc,oBAeHxB,QAfG,EAgBpBwB,IAAI,CAACC,IAAL,CAAU,CAAEC,QAAQ,CAAE,IAAZ,CAAkBH,OAAO,CAAEH,GAA3B,CAAV,EACAnB,WAAW,CAACuB,IAAD,CAAX,CAjBoB,wDAAH,kBAAbL,CAAAA,aAAa,6CAAnB,CAoBAhC,SAAS,CAAC,UAAM,CACd,GAAIY,MAAM,CAACsB,OAAX,CAAoB,CAClBtB,MAAM,CAACsB,OAAP,CAAeM,EAAf,CAAkB,aAAlB,CAAiC,SAACP,GAAD,CAAS,CACxChB,iBAAiB,CAAC,CAAEsB,QAAQ,CAAE,KAAZ,CAAmBH,OAAO,CAAEH,GAA5B,CAAD,CAAjB,CACD,CAFD,EAGD,CACF,CANQ,CAMN,EANM,CAAT,CAQAjC,SAAS,CAAC,UAAM,CACdgB,cAAc,EAAIF,WAAW,CAAC,SAAC2B,IAAD,qCAAcA,IAAd,GAAoBzB,cAApB,IAAD,CAA7B,CACD,CAFQ,CAEN,CAACA,cAAD,CAFM,CAAT,CAIAhB,SAAS,CAAC,UAAM,wBACd,oBAAAe,SAAS,CAACmB,OAAV,gEAAmBQ,cAAnB,CAAkC,CAAEC,QAAQ,CAAE,QAAZ,CAAlC,EACD,CAFQ,CAEN,CAAC9B,QAAD,CAFM,CAAT,CAIA,mBACE,MAAC,SAAD,yBACE,aAAK,SAAS,CAAC,aAAf,wBACE,aAAK,SAAS,CAAC,cAAf,wBACE,YAAK,SAAS,CAAC,QAAf,uBACE,YACE,GAAG,qCAA+BF,WAAW,CAACiC,WAA3C,CADL,CAEE,GAAG,CAAC,EAFN,EADF,EADF,cAOE,YAAK,SAAS,CAAC,UAAf,uBACE,oBAAKjC,WAAW,CAACkC,QAAjB,EADF,EAPF,GADF,cAYE,KAAC,MAAD,IAZF,GADF,cAeE,YAAK,SAAS,CAAC,eAAf,UACGhC,QAAQ,CAACiC,GAAT,CAAa,SAACV,OAAD,CAAa,CACzB,mBACE,YAAK,GAAG,CAAErB,SAAV,uBACE,YACE,SAAS,mBACPqB,OAAO,CAACG,QAAR,CAAmB,QAAnB,CAA8B,UADvB,CADX,uBAKE,YAAK,SAAS,CAAC,UAAf,uBACE,mBAAIH,OAAO,CAACA,OAAZ,EADF,EALF,EADF,EAA0B9B,MAAM,EAAhC,CADF,CAaD,CAdA,CADH,EAfF,cAgCE,KAAC,SAAD,EAAW,aAAa,CAAE0B,aAA1B,EAhCF,GADF,CAoCD,CAED,GAAMe,CAAAA,SAAS,CAAG7C,MAAM,CAAC8C,GAAV,6iDAAf","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport styled from \"styled-components\";\nimport ChatInput from \"./ChatInput\";\nimport Logout from \"./Logout\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport axios from \"axios\";\nimport { sendMessageRoute, recieveMessageRoute } from \"../utils/APIRoutes\";\n\nexport default function ChatContainer({ currentChat, socket }) {\n  const [messages, setMessages] = useState([]);\n  const scrollRef = useRef();\n  const [arrivalMessage, setArrivalMessage] = useState(null);\n\n  useEffect(async () => {\n    const data = await JSON.parse(\n      localStorage.getItem(process.env.REACT_APP_LOCALHOST_KEY)\n    );\n    const response = await axios.post(recieveMessageRoute, {\n      from: data._id,\n      to: currentChat._id,\n    });\n    setMessages(response.data);\n  }, [currentChat]);\n\n  useEffect(() => {\n    const getCurrentChat = async () => {\n      if (currentChat) {\n        await JSON.parse(\n          localStorage.getItem(process.env.REACT_APP_LOCALHOST_KEY)\n        )._id;\n      }\n    };\n    getCurrentChat();\n  }, [currentChat]);\n\n  const handleSendMsg = async (msg) => {\n    const data = await JSON.parse(\n      localStorage.getItem(process.env.REACT_APP_LOCALHOST_KEY)\n    );\n    socket.current.emit(\"send-msg\", {\n      to: currentChat._id,\n      from: data._id,\n      msg,\n    });\n    await axios.post(sendMessageRoute, {\n      from: data._id,\n      to: currentChat._id,\n      message: msg,\n    });\n\n    const msgs = [...messages];\n    msgs.push({ fromSelf: true, message: msg });\n    setMessages(msgs);\n  };\n\n  useEffect(() => {\n    if (socket.current) {\n      socket.current.on(\"msg-recieve\", (msg) => {\n        setArrivalMessage({ fromSelf: false, message: msg });\n      });\n    }\n  }, []);\n\n  useEffect(() => {\n    arrivalMessage && setMessages((prev) => [...prev, arrivalMessage]);\n  }, [arrivalMessage]);\n\n  useEffect(() => {\n    scrollRef.current?.scrollIntoView({ behavior: \"smooth\" });\n  }, [messages]);\n\n  return (\n    <Container>\n      <div className=\"chat-header\">\n        <div className=\"user-details\">\n          <div className=\"avatar\">\n            <img\n              src={`data:image/svg+xml;base64,${currentChat.avatarImage}`}\n              alt=\"\"\n            />\n          </div>\n          <div className=\"username\">\n            <h3>{currentChat.username}</h3>\n          </div>\n        </div>\n        <Logout />\n      </div>\n      <div className=\"chat-messages\">\n        {messages.map((message) => {\n          return (\n            <div ref={scrollRef} key={uuidv4()}>\n              <div\n                className={`message ${\n                  message.fromSelf ? \"sended\" : \"recieved\"\n                }`}\n              >\n                <div className=\"content \">\n                  <p>{message.message}</p>\n                </div>\n              </div>\n            </div>\n          );\n        })}\n      </div>\n      <ChatInput handleSendMsg={handleSendMsg} />\n    </Container>\n  );\n}\n\nconst Container = styled.div`\n  display: grid;\n  grid-template-rows: 10% 80% 10%;\n  gap: 0.1rem;\n  overflow: hidden;\n  @media screen and (min-width: 720px) and (max-width: 1080px) {\n    grid-template-rows: 15% 70% 15%;\n  }\n  .chat-header {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding: 0 2rem;\n    .user-details {\n      display: flex;\n      align-items: center;\n      gap: 1rem;\n      .avatar {\n        img {\n          height: 3rem;\n        }\n      }\n      .username {\n        h3 {\n          color: white;\n        }\n      }\n    }\n  }\n  .chat-messages {\n    padding: 1rem 2rem;\n    display: flex;\n    flex-direction: column;\n    gap: 1rem;\n    overflow: auto;\n    &::-webkit-scrollbar {\n      width: 0.2rem;\n      &-thumb {\n        background-color: #ffffff39;\n        width: 0.1rem;\n        border-radius: 1rem;\n      }\n    }\n    .message {\n      display: flex;\n      align-items: center;\n      .content {\n        max-width: 40%;\n        overflow-wrap: break-word;\n        padding: 1rem;\n        font-size: 1.1rem;\n        border-radius: 1rem;\n        color: #d1d1d1;\n        @media screen and (min-width: 720px) and (max-width: 1080px) {\n          max-width: 70%;\n        }\n      }\n    }\n    .sended {\n      justify-content: flex-end;\n      .content {\n        background-color: #4f04ff21;\n      }\n    }\n    .recieved {\n      justify-content: flex-start;\n      .content {\n        background-color: #9900ff20;\n      }\n    }\n  }\n`;\n"]},"metadata":{},"sourceType":"module"}