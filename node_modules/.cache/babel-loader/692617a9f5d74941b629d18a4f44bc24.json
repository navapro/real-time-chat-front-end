{"ast":null,"code":"import _taggedTemplateLiteral from\"/Users/projects/Documents/GitHub/real-time-chat-front-end/public/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\";import _asyncToGenerator from\"/Users/projects/Documents/GitHub/real-time-chat-front-end/public/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/Users/projects/Documents/GitHub/real-time-chat-front-end/public/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";var _templateObject;import _regeneratorRuntime from\"/Users/projects/Documents/GitHub/real-time-chat-front-end/public/node_modules/@babel/runtime/regenerator/index.js\";import React,{useEffect,useState}from\"react\";import styled from\"styled-components\";import axios from\"axios\";import{Buffer}from\"buffer\";import loader from\"../assets/loader.gif\";import{ToastContainer,toast}from\"react-toastify\";import\"react-toastify/dist/ReactToastify.css\";import{useNavigate}from\"react-router-dom\";import{setAvatarRoute}from\"../utils/APIRoutes\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";export default function SetAvatar(){var api=\"https://api.multiavatar.com/4645646\";var navigate=useNavigate();var _useState=useState([]),_useState2=_slicedToArray(_useState,2),avatars=_useState2[0],setAvatars=_useState2[1];var _useState3=useState(true),_useState4=_slicedToArray(_useState3,2),isLoading=_useState4[0],setIsLoading=_useState4[1];var _useState5=useState(undefined),_useState6=_slicedToArray(_useState5,2),selectedAvatar=_useState6[0],setSelectedAvatar=_useState6[1];var toastOptions={position:\"bottom-right\",autoClose:8000,pauseOnHover:true,draggable:true,theme:\"dark\"};useEffect(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(!localStorage.getItem(process.env.REACT_APP_LOCALHOST_KEY))navigate(\"/login\");case 1:case\"end\":return _context.stop();}}},_callee);})),[]);var setProfilePicture=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var user,_yield$axios$post,data;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:if(!(selectedAvatar===undefined)){_context2.next=4;break;}toast.error(\"Please select an avatar\",toastOptions);_context2.next=12;break;case 4:_context2.next=6;return JSON.parse(localStorage.getItem(process.env.REACT_APP_LOCALHOST_KEY));case 6:user=_context2.sent;_context2.next=9;return axios.post(\"\".concat(setAvatarRoute,\"/\").concat(user._id),{image:avatars[selectedAvatar]});case 9:_yield$axios$post=_context2.sent;data=_yield$axios$post.data;if(data.isSet){user.isAvatarImageSet=true;user.avatarImage=data.image;localStorage.setItem(process.env.REACT_APP_LOCALHOST_KEY,JSON.stringify(user));navigate(\"/\");}else{toast.error(\"Error setting avatar. Please try again.\",toastOptions);}case 12:case\"end\":return _context2.stop();}}},_callee2);}));return function setProfilePicture(){return _ref2.apply(this,arguments);};}();useEffect(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(){var data,i,image,buffer;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:data=[];i=0;case 2:if(!(i<4)){_context3.next=11;break;}_context3.next=5;return axios.get(\"\".concat(api,\"/\").concat(Math.round(Math.random()*1000)));case 5:image=_context3.sent;buffer=new Buffer(image.data);data.push(buffer.toString(\"base64\"));case 8:i++;_context3.next=2;break;case 11:setAvatars(data);setIsLoading(false);case 13:case\"end\":return _context3.stop();}}},_callee3);})),[]);return/*#__PURE__*/_jsx(_Fragment,{children:isLoading?/*#__PURE__*/_jsx(Container,{children:/*#__PURE__*/_jsx(\"img\",{src:loader,alt:\"loader\",className:\"loader\"})}):/*#__PURE__*/_jsxs(Container,{children:[/*#__PURE__*/_jsx(\"div\",{className:\"title-container\",children:/*#__PURE__*/_jsx(\"h1\",{children:\"Pick an Avatar as your profile picture\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"avatars\",children:avatars.map(function(avatar,index){return/*#__PURE__*/_jsx(\"div\",{className:\"avatar \".concat(selectedAvatar===index?\"selected\":\"\"),children:/*#__PURE__*/_jsx(\"img\",{src:\"data:image/svg+xml;base64,\".concat(avatar),alt:\"avatar\",onClick:function onClick(){return setSelectedAvatar(index);}},avatar)});})}),/*#__PURE__*/_jsx(\"button\",{onClick:setProfilePicture,className:\"submit-btn\",children:\"Set as Profile Picture\"}),/*#__PURE__*/_jsx(ToastContainer,{})]})});}var Container=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  flex-direction: column;\\n  gap: 3rem;\\n  background-color: #131324;\\n  height: 100vh;\\n  width: 100vw;\\n\\n  .loader {\\n    max-inline-size: 100%;\\n  }\\n\\n  .title-container {\\n    h1 {\\n      color: white;\\n    }\\n  }\\n  .avatars {\\n    display: flex;\\n    gap: 2rem;\\n\\n    .avatar {\\n      border: 0.4rem solid transparent;\\n      padding: 0.4rem;\\n      border-radius: 5rem;\\n      display: flex;\\n      justify-content: center;\\n      align-items: center;\\n      transition: 0.5s ease-in-out;\\n      img {\\n        height: 6rem;\\n        transition: 0.5s ease-in-out;\\n      }\\n    }\\n    .selected {\\n      border: 0.4rem solid #4e0eff;\\n    }\\n  }\\n  .submit-btn {\\n    background-color: #4e0eff;\\n    color: white;\\n    padding: 1rem 2rem;\\n    border: none;\\n    font-weight: bold;\\n    cursor: pointer;\\n    border-radius: 0.4rem;\\n    font-size: 1rem;\\n    text-transform: uppercase;\\n    &:hover {\\n      background-color: #4e0eff;\\n    }\\n  }\\n\"])));","map":{"version":3,"sources":["/Users/projects/Documents/GitHub/real-time-chat-front-end/public/src/components/SetAvatar.jsx"],"names":["React","useEffect","useState","styled","axios","Buffer","loader","ToastContainer","toast","useNavigate","setAvatarRoute","SetAvatar","api","navigate","avatars","setAvatars","isLoading","setIsLoading","undefined","selectedAvatar","setSelectedAvatar","toastOptions","position","autoClose","pauseOnHover","draggable","theme","localStorage","getItem","process","env","REACT_APP_LOCALHOST_KEY","setProfilePicture","error","JSON","parse","user","post","_id","image","data","isSet","isAvatarImageSet","avatarImage","setItem","stringify","i","get","Math","round","random","buffer","push","toString","map","avatar","index","Container","div"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport axios from \"axios\";\nimport { Buffer } from \"buffer\";\nimport loader from \"../assets/loader.gif\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { useNavigate } from \"react-router-dom\";\nimport { setAvatarRoute } from \"../utils/APIRoutes\";\nexport default function SetAvatar() {\n  const api = `https://api.multiavatar.com/4645646`;\n  const navigate = useNavigate();\n  const [avatars, setAvatars] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [selectedAvatar, setSelectedAvatar] = useState(undefined);\n  const toastOptions = {\n    position: \"bottom-right\",\n    autoClose: 8000,\n    pauseOnHover: true,\n    draggable: true,\n    theme: \"dark\",\n  };\n\n  useEffect(async () => {\n    if (!localStorage.getItem(process.env.REACT_APP_LOCALHOST_KEY))\n      navigate(\"/login\");\n  }, []);\n\n  const setProfilePicture = async () => {\n    if (selectedAvatar === undefined) {\n      toast.error(\"Please select an avatar\", toastOptions);\n    } else {\n      const user = await JSON.parse(\n        localStorage.getItem(process.env.REACT_APP_LOCALHOST_KEY)\n      );\n\n      const { data } = await axios.post(`${setAvatarRoute}/${user._id}`, {\n        image: avatars[selectedAvatar],\n      });\n\n      if (data.isSet) {\n        user.isAvatarImageSet = true;\n        user.avatarImage = data.image;\n        localStorage.setItem(\n          process.env.REACT_APP_LOCALHOST_KEY,\n          JSON.stringify(user)\n        );\n        navigate(\"/\");\n      } else {\n        toast.error(\"Error setting avatar. Please try again.\", toastOptions);\n      }\n    }\n  };\n\n  useEffect(async () => {\n    const data = [];\n    for (let i = 0; i < 4; i++) {\n      const image = await axios.get(\n        `${api}/${Math.round(Math.random() * 1000)}`\n      );\n      const buffer = new Buffer(image.data);\n      data.push(buffer.toString(\"base64\"));\n    }\n    setAvatars(data);\n    setIsLoading(false);\n  }, []);\n  return (\n    <>\n      {isLoading ? (\n        <Container>\n          <img src={loader} alt=\"loader\" className=\"loader\" />\n        </Container>\n      ) : (\n        <Container>\n          <div className=\"title-container\">\n            <h1>Pick an Avatar as your profile picture</h1>\n          </div>\n          <div className=\"avatars\">\n            {avatars.map((avatar, index) => {\n              return (\n                <div\n                  className={`avatar ${\n                    selectedAvatar === index ? \"selected\" : \"\"\n                  }`}\n                >\n                  <img\n                    src={`data:image/svg+xml;base64,${avatar}`}\n                    alt=\"avatar\"\n                    key={avatar}\n                    onClick={() => setSelectedAvatar(index)}\n                  />\n                </div>\n              );\n            })}\n          </div>\n          <button onClick={setProfilePicture} className=\"submit-btn\">\n            Set as Profile Picture\n          </button>\n          <ToastContainer />\n        </Container>\n      )}\n    </>\n  );\n}\n\nconst Container = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n  gap: 3rem;\n  background-color: #131324;\n  height: 100vh;\n  width: 100vw;\n\n  .loader {\n    max-inline-size: 100%;\n  }\n\n  .title-container {\n    h1 {\n      color: white;\n    }\n  }\n  .avatars {\n    display: flex;\n    gap: 2rem;\n\n    .avatar {\n      border: 0.4rem solid transparent;\n      padding: 0.4rem;\n      border-radius: 5rem;\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      transition: 0.5s ease-in-out;\n      img {\n        height: 6rem;\n        transition: 0.5s ease-in-out;\n      }\n    }\n    .selected {\n      border: 0.4rem solid #4e0eff;\n    }\n  }\n  .submit-btn {\n    background-color: #4e0eff;\n    color: white;\n    padding: 1rem 2rem;\n    border: none;\n    font-weight: bold;\n    cursor: pointer;\n    border-radius: 0.4rem;\n    font-size: 1rem;\n    text-transform: uppercase;\n    &:hover {\n      background-color: #4e0eff;\n    }\n  }\n`;\n"]},"metadata":{},"sourceType":"module"}